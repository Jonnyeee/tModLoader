--- src/Terraria\Terraria\Program.cs
+++ src/tModLoader\Terraria\Program.cs
@@ -18,6 +_,7 @@
 #endif
 using Terraria.Initializers;
 using Terraria.Localization;
+using Terraria.ModLoader;
 using Terraria.Social;
 using Terraria.Utilities;
 
@@ -63,6 +_,7 @@
 		{
 			Program.ForceLoadAssembly(Assembly.GetExecutingAssembly(), true);
 			Program.LoadedEverything = true;
+			Logging.Terraria.Info("JIT loading finished");
 		}
 
 		private static void ForceJITOnAssembly(Assembly assembly)
@@ -139,8 +_,9 @@
 
 		private static void SetupLogging()
 		{
+			Logging.Init();
 			bool flag = Program.LaunchParameters.ContainsKey("-logfile");
-			if (flag)
+			if (false)
 			{
 				string text = Program.LaunchParameters["-logfile"];
 				if (text == null || text.Trim() == "")
@@ -175,7 +_,7 @@
 				string text = "================\r\n";
 				text += string.Format("{0}: First-Chance Exception\r\nCulture: {1}\r\nException: {2}\r\n", DateTime.Now, Thread.CurrentThread.CurrentCulture.Name, arg);
 				text += "================\r\n\r\n";
-				Console.Write(text);
+				Console.WriteLine(text);
 				if (useMiniDumps)
 				{
 					CrashDump.WriteException(CrashDump.Options.WithIndirectlyReferencedMemory, Path.Combine(Main.SavePath, "Dumps"));
@@ -187,7 +_,7 @@
 				string text = "================\r\n";
 				text += string.Format("{0}: Unhandled Exception\r\nCulture: {1}\r\nException: {2}\r\n", DateTime.Now, Thread.CurrentThread.CurrentCulture.Name, arg);
 				text += "================\r\n";
-				Console.Write(text);
+				Console.WriteLine(text);
 				if (useFullDumps)
 				{
 					CrashDump.WriteException(dumpOptions, Path.Combine(Main.SavePath, "Dumps"));
@@ -205,20 +_,34 @@
 #endif
 			try
 			{
-				Console.OutputEncoding = Encoding.Unicode;
-				Console.InputEncoding = Encoding.Unicode;
+				Console.OutputEncoding = Encoding.UTF8;
+
+				if (Platform.IsWindows)
+					Console.InputEncoding = Encoding.Unicode;
+				else
+					Console.InputEncoding = Encoding.UTF8;
 			}
 			catch
 			{
 			}
 		}
 
+		// some versions of the .NET runtime will run the Main static initilizer as soon as LaunchGame is invoked
+		// causing Main.SavePath to be initialized before LaunchParameters is parsed.
+		// moving arg parsing to a separate function avoids this
 		public static void LaunchGame(string[] args, bool monoArgs = false)
 		{
 			if (monoArgs)
 			{
 				args = Utils.ConvertMonoArgsToDotNet(args);
 			}
+
+			LaunchParameters = Utils.ParseArguements(args);
+			LaunchGame_();
+		}
+
+		public static void LaunchGame_()
+		{
 			if (Platform.IsOSX)
 			{
 				Main.OnEngineLoad += delegate
@@ -226,10 +_,13 @@
 					Main.instance.IsMouseVisible = false;
 				};
 			}
-			Program.LaunchParameters = Utils.ParseArguements(args);
+			Main.mainThreadId = Thread.CurrentThread.ManagedThreadId;
 			ThreadPool.SetMinThreads(8, 8);
 			LanguageManager.Instance.SetLanguage(GameCulture.English);
 			Program.SetupLogging();
+#if !WINDOWS
+			FNAThreading.Init();
+#endif
 			using (Main main = new Main())
 			{
 				try
@@ -247,6 +_,7 @@
 				}
 				catch (Exception e)
 				{
+					Logging.Terraria.Fatal("Main engine crash", e);
 					Program.DisplayException(e);
 				}
 			}
@@ -264,8 +_,15 @@
 				}
 #if CLIENT
 				MessageBox.Show(e.ToString(), "Terraria: Error");
-#else
-				Console.WriteLine(Language.GetTextValue("Error.ServerCrash"), DateTime.Now, e);
+				if (e.Message.Contains("CSteamworks"))
+					Process.Start(@"https://github.com/blushiemagic/tModLoader/wiki/Basic-tModLoader-Usage-FAQ#systemdllnotfoundexception-unable-to-load-dllcsteamworks");
+				if (e.StackTrace.Contains("LaunchLocalServer"))
+				{
+					MessageBox.Show("Looks like you didn't do a complete install. You are missing tModLoaderServer.exe. Check your install directory and read the install directions.", "Terraria: Error");
+					Process.Start(@"https://github.com/blushiemagic/tModLoader/wiki/Basic-tModLoader-Usage-FAQ#host-and-play-the-system-cannot-find-the-file-specified");
+				}
+#else
+				Console.WriteLine(Language.GetTextValue("tModLoader.ServerCrash"), DateTime.Now, e);
 #endif
 			}
 			catch

